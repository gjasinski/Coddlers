buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.moowork.gradle:gradle-node-plugin:1.2.0")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

group = 'pl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.apache.logging.log4j:log4j-core:2.11.0')
	compile('org.postgresql:postgresql:9.4-1206-jdbc42')
	compile('io.springfox:springfox-swagger2:2.9.0')
	compile('io.springfox:springfox-swagger-ui:2.9.0')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('io.jsonwebtoken:jjwt:0.9.0')
	compile('javax.mail:javax.mail-api:1.6.1')
	compile('com.sun.mail:javax.mail:1.6.1')
	compile('javax.activation:activation:1.1.1')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.mockito:mockito-all:2.0.2-beta')
}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

node {
	version = '10.0.0'
	npmVersion = '5.6.0'
	download = true
	workDir = file("${project.buildDir}/node")
	nodeModulesDir = file("$webappDir")
}

task buildAngular(type: NpmTask) {
	args = ['run', 'build']
}
buildAngular.dependsOn(npm_install)

processResources {
	dependsOn "buildAngular"
}
